#str(train)
table(train$Survived)
prop.table(table(train$Survived))

#create new column in test data, Survived
test$Survived <- rep(0,418)

#submit a csv file with the PassengerId as well as our Survived predictions to Kaggle
#So letâ€™s extract those two columns from the test dataframe, store them in a new container, 
#and then send it to an output file:
submit <- data.frame(PassengerId = test$PassengerId, Survived = test$Survived)
write.csv(submit, file = "theyallperish.csv", row.names = FALSE)

summary(train$Sex)
#the one following means use the row proportions, no number means divide by total rows,
#and 2 is the column proportions
prop.table(table(train$Sex,train$Survived),1)

test$Survived <- 0
test$Survived[test$Sex == 'female'] <- 1

summary(train$Age)
train$Child <- 0
train$Child[train$Age <18] <- 1

# table with both gender and age to see the survival proportions for different subsets. 
aggregate(Survived ~ Child + Sex, data=train, FUN=sum)
aggregate(Survived ~ Child + Sex, data=train, FUN=length)
aggregate(Survived ~ Child + Sex, data=train, FUN=function(x) {sum(x)/length(x)})

#bin the fare variable
train$Fare2 <- '30+'
train$Fare2[train$Fare < 30 & train$Fare >= 20] <- '20-30'
train$Fare2[train$Fare < 20 & train$Fare >= 10] <- '10-20'
train$Fare2[train$Fare < 10] <- '<10'

aggregate(Survived ~ Fare2 + Pclass + Sex, data=train, FUN=function(x) {sum(x)/length(x)})

test$Survived <- 0
test$Survived[test$Sex == 'female'] <- 1
test$Survived[test$Sex == 'female' & test$Pclass == 3 & test$Fare >= 20] <- 0



